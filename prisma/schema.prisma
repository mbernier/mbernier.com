generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_SESSION_POOLER_URL")
}

model activity_items {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type           String
  item_id        String           @db.Uuid
  source_url     String?
  published_at   DateTime?        @default(now()) @db.Timestamp(6)
  context_json   Json?
  status         String?          @default("posted")
  scheduled_at   DateTime?        @db.Timestamp(6)
  social_metrics social_metrics[]
}

model admin_actions {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  actor_id  String
  action    String
  target    String
  target_id String
  timestamp DateTime? @default(now()) @db.Timestamp(6)
}

model app_updates {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  app        String
  project_id String?   @db.Uuid
  link       String?
  summary    String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  projects   projects? @relation(fields: [project_id], references: [id], onUpdate: NoAction)
}

model articles {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  slug                   String    @unique
  title                  String
  excerpt                String?
  content                String?
  description            String?
  focus_keyword          String?
  secondary_keywords     String[]
  meta_title             String?
  canonical_url          String?
  categories             String[]
  tags                   String[]
  topic                  String?
  status                 String?   @default("draft")
  featured               Boolean?  @default(false)
  tech                   String[]
  project_type           String?
  complexity             String?
  duration               String?
  team_size              String?
  image                  String?
  image_alt              String?
  og_image               String?
  reading_time           Int?
  word_count             Int?
  comments_enabled       Boolean?  @default(true)
  call_to_action         String?
  google_analytics_event String?
  conversion_goal        String?
  utm_campaign           String?
  created_at             DateTime? @default(now()) @db.Timestamp(6)
  date                   DateTime? @db.Timestamp(6)
  author                 String?
  updated_at             DateTime? @db.Timestamp(6)
  is_published           Boolean?  @default(true)
}

model client_app_usage {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  client_app_id String?      @db.Uuid
  endpoint      String
  ip_address    String?
  timestamp     DateTime?    @default(now()) @db.Timestamp(6)
  client_apps   client_apps? @relation(fields: [client_app_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model client_apps {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String
  api_key          String             @unique
  default_logo     String?
  permissions      String[]
  purposes         String[]
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  client_app_usage client_app_usage[]
}

model contact_submissions {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String?
  email        String?
  subject      String?
  message      String?
  company      String?
  budget       String?
  timeline     String?
  service_type String?
  is_read      Boolean?  @default(false)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
}

model notifications {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type         String?
  related_id   String?   @db.Uuid
  is_read      Boolean?  @default(false)
  triggered_by String?
  created_at   DateTime? @default(now()) @db.Timestamp(6)
}

model offers {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  section    String?
  company    String?
  offer      String?
  link       String?
  g2_link    String?
  tags       String[]
  logo       String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
}

model projects {
  id                  String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  slug                String        @unique
  title               String
  url                 String?
  description         String?
  features            String[]
  image               String?
  show_on_offers_page Boolean?      @default(false)
  created_at          DateTime?     @default(now()) @db.Timestamp(6)
  app_updates         app_updates[]
}

model social_metrics {
  id             String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  activity_id    String?         @db.Uuid
  platform       String?
  impressions    Int?
  likes          Int?
  shares         Int?
  comments       Int?
  post_time      DateTime?       @db.Timestamp(6)
  fetched_at     DateTime?       @default(now()) @db.Timestamp(6)
  activity_items activity_items? @relation(fields: [activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model testimonials {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  author     String
  company    String?
  title      String?
  quote      String
  source_url String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
}

model work_history {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_name String
  logo         String?
  url          String?
  description  String?
  show_on_site Boolean?  @default(true)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  start_date   DateTime? @db.Date
  end_date     DateTime? @db.Date
}
