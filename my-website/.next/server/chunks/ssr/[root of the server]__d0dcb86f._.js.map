{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/mattbernier/projects/mbernier.com/mbernier.com/my-website/src/lib/content.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport { remark } from 'remark';\nimport html from 'remark-html';\n\nconst contentDirectory = path.join(process.cwd(), 'src/content');\n\nexport interface ContentItem {\n  slug: string;\n  title: string;\n  date: string;\n  sortDate?: string;\n  excerpt: string;\n  content: string;\n  [key: string]: string | string[] | number | boolean | null | undefined;\n}\n\nexport interface ContentDirectory {\n  [key: string]: ContentItem[];\n}\n\nexport interface PaginatedContent {\n  items: ContentItem[];\n  total: number;\n  currentPage: number;\n  totalPages: number;\n  hasNextPage: boolean;\n  hasPrevPage: boolean;\n}\n\n// Function to strip markdown formatting from text\nfunction stripMarkdown(text: string): string {\n  // Remove headers (# Header)\n  text = text.replace(/#{1,6}\\s+([^\\n]+)/g, '$1');\n  \n  // Remove bold/italic formatting\n  text = text.replace(/[*_]{1,3}([^*_]+)[*_]{1,3}/g, '$1');\n  \n  // Remove links [text](url)\n  text = text.replace(/\\[([^\\]]+)\\]\\([^)]+\\)/g, '$1');\n  \n  // Remove images ![alt](url)\n  text = text.replace(/!\\[([^\\]]+)\\]\\([^)]+\\)/g, '$1');\n  \n  // Remove code blocks and inline code\n  text = text.replace(/```[\\s\\S]*?```/g, '');\n  text = text.replace(/`([^`]+)`/g, '$1');\n  \n  // Remove blockquotes\n  text = text.replace(/>\\s+([^\\n]+)/g, '$1');\n  \n  // Remove horizontal rules\n  text = text.replace(/(\\*{3,}|-{3,}|_{3,})/g, '');\n  \n  // Remove extra whitespace and normalize\n  text = text.replace(/\\n{3,}/g, '\\n\\n');\n  text = text.trim();\n  \n  return text;\n}\n\nexport async function getContentByDirectory(type: string): Promise<ContentItem[]> {\n  const directory = path.join(contentDirectory, type);\n  const fileNames = fs.readdirSync(directory);\n  \n  const allContent = await Promise.all(\n    fileNames.map(async (fileName) => {\n      // Remove \".md\" from file name to get id\n      const slug = fileName.replace(/\\.md$/, '');\n      \n      // Read markdown file as string\n      const fullPath = path.join(directory, fileName);\n      const fileContents = fs.readFileSync(fullPath, 'utf8');\n      \n      // Use gray-matter to parse the content metadata section\n      const matterResult = matter(fileContents);\n      \n      // For articles, verify they have a category\n      if (type === 'articles' && !matterResult.data.categories) {\n        throw new Error(`Article \"${slug}\" is missing required \"categories\" field.`);\n      }\n      \n      // Use remark to convert markdown into HTML string\n      const processedContent = await remark()\n        .use(html)\n        .process(matterResult.content);\n      const contentHtml = processedContent.toString();\n      \n      // Strip markdown from content for the excerpt\n      const plainTextContent = stripMarkdown(matterResult.content);\n      const excerpt = plainTextContent.slice(0, 200) + '...';\n      \n      // Ensure date is properly formatted\n      const itemDate = matterResult.data.date;\n      if (itemDate && !(itemDate instanceof Date)) {\n        // If date isn't a Date object already, convert it if needed\n        if (typeof itemDate === 'string') {\n          // If date contains \"Present\", use a far future year for sorting\n          if (itemDate.includes('Present')) {\n            matterResult.data.sortDate = '9999'; // Far future date to ensure it's sorted first\n          }\n          // For date ranges like \"2018-2019\", use the first year for sorting\n          else if (itemDate.includes('-')) {\n            const years = itemDate.split('-');\n            if (years.length === 2 && !isNaN(parseInt(years[0])) && !isNaN(parseInt(years[1]))) {\n              // Keep the original date string for display, but add a sortDate for sorting\n              matterResult.data.sortDate = years[1] || years[0]; // Use end year or start year if no end\n            } else {\n              // Try to treat as a regular date\n              const parsedDate = new Date(itemDate);\n              if (!isNaN(parsedDate.getTime())) {\n                matterResult.data.sortDate = parsedDate.getFullYear().toString();\n              } else {\n                matterResult.data.sortDate = '0'; // Fallback for invalid dates\n              }\n            }\n          } else {\n            // Try to parse as a regular date\n            const parsedDate = new Date(itemDate);\n            if (!isNaN(parsedDate.getTime())) {\n              matterResult.data.sortDate = parsedDate.getFullYear().toString();\n            } else {\n              matterResult.data.sortDate = '0'; // Fallback for invalid dates\n            }\n          }\n        }\n      }\n      \n      // Combine the data with the slug and content\n      return {\n        slug,\n        content: contentHtml,\n        excerpt,\n        ...matterResult.data,\n      } as ContentItem;\n    })\n  );\n  \n  // Sort content by date using full date comparison (not just year)\n  const sortedContent = allContent.sort((a, b) => {\n    const getDateValue = (item: ContentItem) => {\n      if (typeof item.date === 'string') {\n        // Handle \"Present\" dates by using far future date\n        if (item.date.toLowerCase().includes('present')) {\n          return new Date('2099-12-31').getTime();\n        }\n        \n        // For date ranges like \"2018-2019\", use the end year as Dec 31\n        if (item.date.includes('-') && !item.date.includes('T')) {\n          const years = item.date.split('-');\n          if (years.length === 2 && !isNaN(parseInt(years[0])) && !isNaN(parseInt(years[1]))) {\n            const endYear = years[1] || years[0];\n            return new Date(`${endYear}-12-31`).getTime();\n          }\n        }\n        \n        // Try to parse as full date (ISO format, etc.)\n        const parsedDate = new Date(item.date);\n        if (!isNaN(parsedDate.getTime())) {\n          return parsedDate.getTime();\n        }\n        \n        // Fallback: if it's just a year, treat as Dec 31 of that year\n        if (/^\\d{4}$/.test(item.date)) {\n          return new Date(`${item.date}-12-31`).getTime();\n        }\n      }\n      \n      return 0; // Fallback for invalid dates (will sort to bottom)\n    };\n    \n    const dateA = getDateValue(a);\n    const dateB = getDateValue(b);\n    \n    return dateB - dateA; // Sort descending (most recent first)\n  });\n  \n  return sortedContent;\n}\n\n/**\n * Get paginated content from a specific directory\n * @param type Directory type (e.g., 'articles', 'projects')\n * @param page Current page number (1-indexed)\n * @param pageSize Number of items per page\n * @param category Optional category to filter by\n * @returns Paginated content with metadata\n */\nexport async function getPaginatedContent(\n  type: string,\n  page: number = 1,\n  pageSize: number = 9,\n  category?: string\n): Promise<PaginatedContent> {\n  const allContent = await getContentByDirectory(type);\n  \n  // Filter by category if provided\n  const filteredContent = category \n    ? allContent.filter(item => {\n        // Handle array of categories\n        if (Array.isArray(item.categories)) {\n          return item.categories.some(cat => \n            typeof cat === 'string' && \n            cat.trim().toLowerCase() === category.toLowerCase()\n          );\n        } \n        // Handle string categories, possibly with commas - for backward compatibility\n        else if (typeof item.categories === 'string') {\n          if (item.categories.includes(',')) {\n            // Handle comma-separated categories\n            const categories = item.categories.split(',').map(c => c.trim().toLowerCase());\n            return categories.includes(category.toLowerCase());\n          }\n          return item.categories.trim().toLowerCase() === category.toLowerCase();\n        }\n        // Legacy support for old category field\n        else if (typeof item.category === 'string') {\n          if (item.category.includes(',')) {\n            // Handle comma-separated categories\n            const categories = item.category.split(',').map(c => c.trim().toLowerCase());\n            return categories.includes(category.toLowerCase());\n          }\n          return item.category.trim().toLowerCase() === category.toLowerCase();\n        }\n        return false;\n      })\n    : allContent;\n  \n  const startIndex = (page - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n  const paginatedItems = filteredContent.slice(startIndex, endIndex);\n  \n  const total = filteredContent.length;\n  const totalPages = Math.ceil(total / pageSize);\n  \n  return {\n    items: paginatedItems,\n    total,\n    currentPage: page,\n    totalPages,\n    hasNextPage: page < totalPages,\n    hasPrevPage: page > 1\n  };\n}\n\nexport async function getContentBySlug(type: string, slug: string): Promise<ContentItem | null> {\n  try {\n    const fullPath = path.join(contentDirectory, type, `${slug}.md`);\n    const fileContents = fs.readFileSync(fullPath, 'utf8');\n    \n    // Use gray-matter to parse the content metadata section\n    const matterResult = matter(fileContents);\n    \n    // Use remark to convert markdown into HTML string\n    const processedContent = await remark()\n      .use(html)\n      .process(matterResult.content);\n    const contentHtml = processedContent.toString();\n    \n    // Combine the data with the slug and content\n    return {\n      slug,\n      content: contentHtml,\n      excerpt: matterResult.content.slice(0, 200) + '...',\n      ...matterResult.data,\n    } as ContentItem;\n  } catch (error) {\n    console.error(`Error reading content for ${type}/${slug}:`, error);\n    return null;\n  }\n}\n\nexport async function getAllContentSlugs(type: string): Promise<string[]> {\n  const directory = path.join(contentDirectory, type);\n  try {\n    const fileNames = fs.readdirSync(directory);\n    return fileNames.map((fileName) => fileName.replace(/\\.md$/, ''));\n  } catch (error) {\n    console.error(`Error reading directory ${type}:`, error);\n    return [];\n  }\n}\n\n/**\n * Get all unique categories from a content directory\n * @param type Directory type (e.g., 'articles', 'projects')\n * @returns Array of unique categories\n */\nexport async function getUniqueCategories(type: string): Promise<string[]> {\n  const allContent = await getContentByDirectory(type);\n  \n  // Extract all categories from content items\n  const categoriesArray: string[] = [];\n  \n  allContent.forEach(item => {\n    // Handle array of categories (new format)\n    if (Array.isArray(item.categories)) {\n      item.categories.forEach(cat => {\n        if (typeof cat === 'string') {\n          // Trim any whitespace that might exist\n          categoriesArray.push(cat.trim());\n        }\n      });\n    } \n    // Handle single categories as string (for backward compatibility)\n    else if (typeof item.categories === 'string') {\n      // Check if it contains commas (multiple categories as CSV)\n      if (item.categories.includes(',')) {\n        // Split by comma and add each category\n        const cats = item.categories.split(',');\n        cats.forEach(cat => categoriesArray.push(cat.trim()));\n      } else {\n        categoriesArray.push(item.categories.trim());\n      }\n    }\n    // Legacy support for old category field\n    else if (typeof item.category === 'string') {\n      // Check if it contains commas (multiple categories as CSV)\n      if (item.category.includes(',')) {\n        // Split by comma and add each category\n        const cats = item.category.split(',');\n        cats.forEach(cat => categoriesArray.push(cat.trim()));\n      } else {\n        categoriesArray.push(item.category.trim());\n      }\n    }\n  });\n  \n  // Return unique categories, sorted alphabetically\n  return Array.from(new Set(categoriesArray)).sort();\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///Users/mattbernier/projects/mbernier.com/mbernier.com/my-website/src/app/page.tsx"],"sourcesContent":["import Link from 'next/link';\nimport Image from 'next/image';\nimport { getContentByDirectory } from '../lib/content';\nimport { constructMetadata } from '../lib/metadata';\n\nexport const metadata = constructMetadata({\n  title: 'Home',\n});\n\nexport default async function Home() {\n  const [articles, projects] = await Promise.all([\n    getContentByDirectory('articles'),\n    getContentByDirectory('projects'),\n  ]);\n\n  // Get the most recent items\n  const recentArticles = articles.slice(0, 3);\n  const recentProjects = projects.slice(0, 3);\n\n  return (\n    <div className=\"bg-background\">\n      {/* Hero Section */}\n      <section className=\"relative\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 md:py-28 flex flex-col md:flex-row items-center\">\n          <div className=\"md:w-1/2 md:pr-12\">\n            <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold tracking-tight text-foreground\">\n              Hi, I&apos;m Matt Bernier\n            </h1>\n            <p className=\"mt-4 text-xl text-muted-foreground\">\n              Developer, writer, and creator focused on building great products and experiences.\n            </p>\n            <div className=\"mt-8 flex flex-wrap gap-4\">\n              <Link\n                href=\"/services\"\n                className=\"px-6 py-3 rounded-md bg-primary text-primary-foreground font-medium shadow-sm hover:bg-primary/90 transition-colors\"\n              >\n                Hire Me\n              </Link>\n              <Link\n                href=\"/resume\"\n                className=\"px-6 py-3 rounded-md bg-secondary text-secondary-foreground font-medium shadow-sm hover:bg-secondary/90 transition-colors\"\n              >\n                View Resume\n              </Link>\n              <Link\n                href=\"/projects\"\n                className=\"px-6 py-3 rounded-md border border-border text-foreground font-medium shadow-sm hover:bg-muted transition-colors\"\n              >\n                See Projects\n              </Link>\n            </div>\n          </div>\n          <div className=\"mt-12 md:mt-0 md:w-1/2\">\n            <div className=\"relative w-80 h-80 mx-auto\">\n              <Image\n                src=\"/matt.hat.jpg\"\n                alt=\"Matt Bernier\"\n                fill\n                className=\"object-cover rounded-full shadow-xl\"\n                priority\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Recent Articles Section */}\n      <section className=\"py-16 bg-muted\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-baseline\">\n            <h2 className=\"text-3xl font-bold text-foreground\">Recent Articles</h2>\n            <Link \n              href=\"/articles\" \n              className=\"text-primary hover:underline transition-colors\"\n            >\n              View all articles →\n            </Link>\n          </div>\n          <div className=\"mt-8 grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            {recentArticles.length > 0 ? (\n              recentArticles.map((article) => (\n                <div key={article.slug} className=\"bg-card rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow\">\n                  <div className=\"p-6\">\n                    <div className=\"text-sm text-muted-foreground\">{new Date(article.date).toLocaleDateString()}</div>\n                    <Link href={`/articles/${article.slug}`}>\n                      <h3 className=\"mt-2 text-xl font-semibold text-card-foreground hover:text-primary transition-colors\">{article.title}</h3>\n                    </Link>\n                    <p className=\"mt-3 text-muted-foreground\">{article.excerpt}</p>\n                    <Link href={`/articles/${article.slug}`} className=\"mt-4 inline-block text-primary hover:underline transition-colors\">\n                      Read more →\n                    </Link>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <p className=\"col-span-3 text-muted-foreground\">No articles found. Check back soon!</p>\n            )}\n          </div>\n        </div>\n      </section>\n\n      {/* Services Section */}\n      <section className=\"py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-baseline mb-6\">\n            <h2 className=\"text-3xl font-bold text-foreground\">Services</h2>\n            <Link \n              href=\"/services\" \n              className=\"text-primary hover:underline transition-colors\"\n            >\n              More Information →\n            </Link>\n          </div>\n          <div className=\"bg-card rounded-lg shadow p-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-8 gap-y-4\">\n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center mr-3 flex-shrink-0\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-blue-600 dark:text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                  </svg>\n                </div>\n                <span className=\"text-foreground\">-&nbsp;Product Management</span>\n              </div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-purple-100 dark:bg-purple-900/30 rounded-lg flex items-center justify-center mr-3 flex-shrink-0\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-purple-600 dark:text-purple-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n                  </svg>\n                </div>\n                <span className=\"text-foreground\">-&nbsp;Project Management</span>\n              </div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center mr-3 flex-shrink-0\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-green-600 dark:text-green-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n                  </svg>\n                </div>\n                <span className=\"text-foreground\">-&nbsp;Engineering Operations</span>\n              </div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-amber-100 dark:bg-amber-900/30 rounded-lg flex items-center justify-center mr-3 flex-shrink-0\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-amber-600 dark:text-amber-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\" />\n                  </svg>\n                </div>\n                <span className=\"text-foreground\">-&nbsp;Public Speaking & Workshops</span>\n              </div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-indigo-100 dark:bg-indigo-900/30 rounded-lg flex items-center justify-center mr-3 flex-shrink-0\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-indigo-600 dark:text-indigo-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n                <span className=\"text-foreground\">-&nbsp;AI Workflow Integration</span>\n              </div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-rose-100 dark:bg-rose-900/30 rounded-lg flex items-center justify-center mr-3 flex-shrink-0\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-rose-600 dark:text-rose-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n                <span className=\"text-foreground\">-&nbsp;Fractional CPO Services</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Recent Projects Section */}\n      <section className=\"py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-baseline\">\n            <h2 className=\"text-3xl font-bold text-foreground\">Recent Projects</h2>\n            <Link \n              href=\"/projects\" \n              className=\"text-primary hover:underline transition-colors\"\n            >\n              View all projects →\n            </Link>\n          </div>\n          <div className=\"mt-8 grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            {recentProjects.length > 0 ? (\n              recentProjects.map((project) => (\n                <div key={project.slug} className=\"bg-card rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow\">\n                  {project.image && typeof project.image === 'string' && (\n                    <div className=\"relative h-48 w-full\">\n                      <Image\n                        src={project.image}\n                        alt={project.title}\n                        fill\n                        className=\"object-cover\"\n                      />\n                    </div>\n                  )}\n                  <div className=\"p-6\">\n                    <Link href={`/projects/${project.slug}`}>\n                      <h3 className=\"text-xl font-semibold text-foreground hover:text-primary\">{project.title}</h3>\n                    </Link>\n                    <p className=\"mt-3 text-gray-600 dark:text-gray-300\">{project.excerpt}</p>\n                    <Link \n                      href={`/projects/${project.slug}`} \n                      className=\"mt-4 inline-block text-primary hover:underline\"\n                      style={{ color: 'var(--primary-color)' }}\n                    >\n                      Learn more →\n                    </Link>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <p className=\"col-span-3 text-gray-500 dark:text-gray-400\">No projects found. Check back soon!</p>\n            )}\n          </div>\n        </div>\n      </section>\n\n      {/* Tools & Resources Section */}\n      <section className=\"py-16 bg-muted\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-6\">Tools & Resources</h2>\n          <div className=\"bg-card rounded-lg shadow-lg p-8\">\n            <div className=\"flex flex-col md:flex-row items-start md:items-center justify-between\">\n              <div className=\"md:w-2/3\">\n                <h3 className=\"text-2xl font-semibold text-card-foreground mb-3\">\n                  Recommended Tools & Services\n                </h3>\n                <p className=\"text-muted-foreground text-lg mb-4\">\n                  Discover the tools and services I use and recommend for development, productivity, \n                  and business growth. From AI-powered solutions to hosting and infrastructure tools.\n                </p>\n                <div className=\"flex flex-wrap gap-3 mb-6\">\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">\n                    <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                    </svg>\n                    AI Tools\n                  </span>\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">\n                    <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\" />\n                    </svg>\n                    Hosting & Infrastructure\n                  </span>\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">\n                    <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                    Productivity Tools\n                  </span>\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-300\">\n                    <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    </svg>\n                    Business Tools\n                  </span>\n                </div>\n              </div>\n              <div className=\"md:w-1/3 md:text-right\">\n                <a\n                  href=\"https://links.mbernier.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-6 py-3 rounded-lg bg-primary text-primary-foreground font-medium shadow-sm hover:bg-primary/90 transition-colors\"\n                >\n                  Explore Tools\n                  <svg className=\"ml-2 w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                  </svg>\n                </a>\n                <p className=\"text-sm text-muted-foreground mt-2\">\n                  Visit links.mbernier.com\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}